<%#
Author:			Graeme Douglas
The admin configuration page. Targets HTML5.
%>
<% require './config.rb'
%>

<html lang = "en">
<head>
<title> <%=CompanyName%> | autosistant Administration</title>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js">
</script>
<link rel="stylesheet"
	href="http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css" />
<script src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"
	type="text/javascript"></script>
<script>

var A_KEY = 65;
var CTRL_KEY = 17;

/* Idea: For each action, have a list of original database values, list of
         database values to delete, and list of database values to add.
*/
var actionlist = <%=
toRet = "["
index = 0
Actions.each do |action|
	phrases = ConfigDB.execute("SELECT phrase FROM actionphrases WHERE "+
					"aid=?", index)
	phrases.each do |row|
		toRet << "{ "
		toRet << "aid: #{index}, phrase: #{row["phrase"]}"
		toRet << " }, "
	end
end
2.times{toRet.pop}
toRet << "]"
toRet
%>;

$(function() {
	var validateLettersOnly = function(selector) {
		var $elem = $(selector);
		var replace = $elem.val().replace(/[^a-zA-Z]/, "");
		return $elem.val(replace);
	}

	$(".lettersonly").keydown(function(e) {
		if (e.which < 65 || e.which > 90)
			e.preventDefault();
		return true;
	});

	$(".lettersonly").keyup(function(e) {
		if(
			(e.ctrlKey && e.which === A_KEY)	
				 || 
			e.which === CTRL_KEY
		)
			return true;

		validateLettersOnly(this);	
		return true;
	});

	$(".lettersonly").bind("paste", function() {
		var selector = this;
        	setTimeout(function() {
			validateLettersOnly(selector);	
		}, 20);
	});

 // Tabs.
 $( "#tabs" ).tabs().addClass( "ui-tabs-vertical ui-helper-clearfix" );
 $( "#tabs li" ).removeClass( "ui-corner-top" ).addClass( "ui-corner-left" );
 // Create accordions. 
 $( ".accordion" ).accordion();

 // Add item off of list.
 var count = 1;
 $(document).on('click', '.addphrase', function() {
  var form = $(this).closest("form");
  var list = form.children("ul").eq(0);
  var textbox = form.children("input").eq(0);
  var text = textbox.val();
  textbox.attr('value', '');
   var found = false;
   for (i = 0; i < actionlist.length; i++) {
    if (actionlist[i].phrase == text) {
     bool = true;
     break;
    }
   }
   if (text != '' && !found) {
    list.append('<li>'+text+'<a href="#" class="liLinkDelete">x</a></li>');
    var div = form.closest("div");
    div.fadeIn("slow", function() {
     $(div).height('auto');
    });
   } else if (text == '') {
   } else if (found) {
    alert('Cannot have two of the same phrase!');
   }
  })

 // Remove item off of list. 
 $(document).on('click', '.liLinkDelete', function() {
  var li = $(this).closest('li');
  $(this).closest('li').remove();
 })
});

</script>
<style>
.ui-tabs-vertical { width: 55em; }
.ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 12em; }
.ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }
.ui-tabs-vertical .ui-tabs-nav li a { display:block; }
.ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }
.ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}
li { zoom:1 }
</style>
</head>
<body>
<h1> <%=CompanyName%> | autosistant Configuration Page </h1>
<div id="tabs">
<ul>
<li><a href="#tabs-phrases">Phrases</a></li>
<li><a href="#tabs-identcats">Identifier Categories</a></li>
<li><a href="#tabs-products">Product Search</a></li>
<li><a href="#tabs-ordering">Order Process</a></li>
</ul>

<div id="tabs-phrases">
<h3>Phrase Configuration</h3>
<div class="accordion">
<%=
toRet = ""
index = 0
Actions.each do |action|
	# If we cannot configure the action, don't display it
	if !action[:configurable] then index+=1; next end
	toRet << "<h4>" + action[:description] + "</h4>\n"
	toRet << "<div>\n"
	toRet << '<form class="ulmanager" id="ulm-f'+index.to_s+
		'" action="">'+"\n"
	toRet << '<input type="text" class="lettersonly" id="ulm-tb'+
			index.to_s+'"/>'+"\n"
	toRet << '<button type="button" class="addphrase" id="ulm-b'+index.to_s+
			'">Add Phrase</button>'+"\n"
	toRet << '<br/>'+"\n"
	toRet << '<input type="hidden" class="hid" id="hid" value="'+
			index.to_s+'">'+"\n"
	toRet << '<ul class="dynlist" id="ulm-ul'+index.to_s+'">'+"\n" 
	# Add current phrases from DB.
	phrases = ConfigDB.execute("SELECT phrase FROM actionphrases WHERE "+
					"aid=?", index)
	phrases.each do |row|
		toRet << '<li>'+row["phrase"]+
			'<a href="#" class="liLinkDelete">x</a></li>'+"\n"
	end
	toRet << '</ul>'+"\n"
	toRet << '</form>'+"\n"
	toRet << "</div>\n"
	index+=1
end
toRet
%>
</div>
</div>
<div id="tabs-identcats">
<h3>Identifier Category Configuration</h3>
</div>
<div id="tabs-products">
<h3>Product Search Configuration</h3>
</div>
<div id="tabs-ordering">
<h3>Order Process Configuration</h3>
</div>
</div>
</body>
